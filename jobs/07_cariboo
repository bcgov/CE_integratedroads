#!/bin/bash
set -euxo pipefail

# ----
# For given tile, replace integrated roads with Cariboo roads
# ----

PSQL="psql $DATABASE_URL -v ON_ERROR_STOP=1"

# load ce roads within tile
ogr2ogr \
  -f PostgreSQL \
  "PG:$DATABASE_URL" \
  -nln cer \
  -overwrite \
  /vsis3/$OBJECTSTORE_BUCKET/integratedroads_$1.parquet \
  integratedroads_$1

# load cariboo roads within tile (and project status index)
mkdir -p tmp

curl ftp://ftp.geobc.gov.bc.ca/pub/outgoing/for_CE/Project_Tracking_20240304.zip \
  -o tmp/Project_Tracking_20240304.gdb.zip

ogr2ogr \
  -f PostgreSQL \
  "PG:$DATABASE_URL" \
  -nln ccr \
  -lco GEOMETRY_NAME=geom \
  -nlt PROMOTE_TO_MULTI \
  -overwrite \
  /vsis3/$OBJECTSTORE_BUCKET/cariboo_consolidated_roads.parquet \
  -where "map_tile_250 = '$1'" \
  cariboo_consolidated_roads

ogr2ogr \
  -f PostgreSQL \
  "PG:$DATABASE_URL" \
  -nln ccr_index \
  -lco GEOMETRY_NAME=geom \
  -overwrite \
  /vsizip/tmp/Project_Tracking_20240304.gdb.zip \
  CCR_Project_Tracking

rm -rf tmp/Project_Tracking_20240304.gdb.zip

# load nr region
bcdata bc2pg whse_admin_boundaries.adm_nr_regions_spg --query "REGION_NAME = 'Cariboo Natural Resource Region'"

# dra code tables are required
$PSQL -c "create schema if not exists whse_basemapping"
$PSQL -c "DROP TABLE IF EXISTS whse_basemapping.transport_line_structure_code cascade;
DROP TABLE IF EXISTS whse_basemapping.transport_line_surface_code cascade;
DROP TABLE IF EXISTS whse_basemapping.transport_line_type_code cascade;

CREATE TABLE whse_basemapping.transport_line_structure_code (
        transport_line_structure_code character varying(1) PRIMARY KEY,
        description character varying(20) NOT NULL,
        create_integration_session_id integer NOT NULL,
        create_integration_date timestamp with time zone,
        modify_integration_session_id integer NOT NULL,
        modify_integration_date timestamp with time zone
);

CREATE TABLE whse_basemapping.transport_line_surface_code (
        transport_line_surface_code character varying(1) PRIMARY KEY,
        description character varying(20) NOT NULL,
        create_integration_session_id integer NOT NULL,
        create_integration_date timestamp with time zone,
        modify_integration_session_id integer NOT NULL,
        modify_integration_date timestamp with time zone
);

CREATE TABLE whse_basemapping.transport_line_type_code (
        transport_line_type_code character varying(3) PRIMARY KEY,
        description character varying(30) NOT NULL,
        demographic_ind character varying(1) NOT NULL,
        create_integration_session_id integer NOT NULL,
        create_integration_date timestamp with time zone,
        modify_integration_session_id integer NOT NULL,
        modify_integration_date timestamp with time zone,
        road_class character varying(12) NOT NULL
);"
ogr2ogr \
  -f PostgreSQL \
  "PG:$DATABASE_URL" \
  -update \
  -append \
  -nln whse_basemapping.transport_line_type_code \
  /vsis3/$OBJECTSTORE_BUCKET/whse_basemapping.transport_line_type_code.csv \
  whse_basemapping.transport_line_type_code
ogr2ogr \
  -f PostgreSQL \
  "PG:$DATABASE_URL" \
  -update \
  -append \
  -nln whse_basemapping.transport_line_surface_code \
  /vsis3/$OBJECTSTORE_BUCKET/whse_basemapping.transport_line_surface_code.csv \
  whse_basemapping.transport_line_surface_code
ogr2ogr \
  -f PostgreSQL \
  "PG:$DATABASE_URL" \
  -update \
  -append \
  -nln whse_basemapping.transport_line_structure_code \
  /vsis3/$OBJECTSTORE_BUCKET/whse_basemapping.transport_line_structure_code.csv \
  whse_basemapping.transport_line_structure_code

# run the cookie cutter operation
$PSQL -f sql/cariboo_cookie_cutter.sql

# dump tile back to s3
ogr2ogr \
  -f Parquet \
  -nlt LINESTRING \
  -nln integratedroads \
  -sql "SELECT * FROM cer_cariboo" \
  /vsis3/$OBJECTSTORE_BUCKET/integratedroads_$1.parquet \
  "PG:$DATABASE_URL"